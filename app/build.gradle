apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'
    defaultConfig {
        applicationId "mapotempo.com.mapotempo_fleet_android"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 9
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

repositories {
    mavenLocal()
}

repositories {
    jcenter()
    maven {
        url "http://files.couchbase.com/maven2/"
    }
}

dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar'])
    compile project(':lib')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.mapotempo.fleet:mapotempo-fleet-java-client:1.0-SNAPSHOT'

    testCompile 'junit:junit:4.12'
}

/*
task generateJavaDoc(type: org.gradle.api.tasks.javadoc.Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("./src/documentation/")
    failOnError false
}*/

FileTree docFilesTree = fileTree(dir: 'src/main/doc-files')

task copyJavaDocSupportFiles(type: Copy) {
    from docFilesTree
    into 'build/docs/javadoc/doc-files/'
}

task generateApiJavadocs(name: 'documentation', type: Javadoc, dependsOn: ['copyJavaDocSupportFiles']) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.overview('src/main/overview.html')
    failOnError true
}
